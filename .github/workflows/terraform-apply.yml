name: Packer + Terraform CI/CD

on:
  push:
    branches:
      - develop_23-09-25

jobs:
  build-ami:
    name: Build Web Server AMI
    runs-on: ubuntu-latest
    outputs:
      ami_id: ${{ steps.set_ami.outputs.ami_id }}
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Packer
        uses: hashicorp/setup-packer@v2
        with:
          version: "1.9.1"

      - name: Initialize Packer
        run: packer init packer/webserver-ami.pkr.hcl

      - name: Build AMI with Packer
        id: set_ami
        run: |
          echo "Building AMI..."
          # Build the AMI and save full output to a log
          PACKER_OUTPUT=$(packer build -machine-readable packer/webserver-ami.pkr.hcl | tee packer_output.log)

          # Extract AMI ID robustly
          AMI_ID=$(echo "$PACKER_OUTPUT" | grep 'artifact,0,id,aws' | awk -F, '{print $6}' | sed 's/.*://')

          if [ -z "$AMI_ID" ]; then
            echo "ERROR: AMI ID not found!"
            cat packer_output.log
            exit 1
          fi

          echo "Built AMI ID: $AMI_ID"

          # Set as GitHub Actions output
          echo "ami_id=$AMI_ID" >> $GITHUB_OUTPUT

      - name: Debug AMI ID
        env:
          AMI_ID: ${{ steps.set_ami.outputs.ami_id }}
        run: |
          echo "AMI ID from build step: $AMI_ID"

  deploy-terraform:
    name: Deploy ASG with Terraform
    runs-on: ubuntu-latest
    needs: build-ami
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AMI_ID: ${{ needs.build-ami.outputs.ami_id }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Debug AMI ID before Terraform
        env:
          AMI_ID: ${{ needs.build-ami.outputs.ami_id }}
        run: |
          echo "AMI ID passed to deploy job: $AMI_ID"

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.9.0"

      - name: Terraform Init
        run: terraform init
        working-directory: terraform

      - name: Terraform Plan
        run: terraform plan -var "custom_ami_id=${{ env.AMI_ID }}"
        working-directory: terraform

      - name: Terraform Apply
        run: terraform apply -auto-approve -var "custom_ami_id=${{ env.AMI_ID }}"
        working-directory: terraform
