name: Packer + Terraform CI/CD

on:
  push:
    branches:
      - develop

jobs:
  build-ami:
    name: Build Web Server AMI
    runs-on: ubuntu-latest
    env:
       AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
       AWS_REGION: ${{ secrets.AWS_REGION }}
    # outputs:
      # ami_id: ${{ steps.packer_build.outputs.ami_id }}
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Setup Packer
      uses: hashicorp/setup-packer@v2
      with:
         version: '1.9.1' 

    - name: Packer Init
      run: packer init  packer/webserver-ami.pkr.hcl

    - name: Packer build
      run: packer build  packer/webserver-ami.pkr.hcl
    # - name: Packer Build
      # id: packer_build
      # run: |
       # AMI_ID=$(packer build -machine-readable packer/webserver-ami.pkr.hcl \
        # | awk -F, '/artifact,0,id/ {print $6}' | awk -F: '{print $2}')
       # echo "Built AMI: $AMI_ID"
       # echo "ami_id=$AMI_ID" >> $GITHUB_OUTPUT

           

  # deploy-terraform:
    # name: Deploy ASG with Terraform
    # runs-on: ubuntu-latest
    # needs: build-ami
    # env:
      # AWS_REGION: ${{ secrets.AWS_REGION }}
      # AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      # AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    # steps:
      # - name: Checkout repo
        # uses: actions/checkout@v3

      # - name: Install Terraform
        # uses: hashicorp/setup-terraform@v2
        # with:
          # terraform_version: "1.9.0"

      # - name: Terraform Init
        # run: terraform init
        # working-directory: terraform

      # - name: Terraform Plan
        # run: terraform plan -var "ami_id=${{ needs.build-ami.outputs.ami_id }}"
        # working-directory: terraform

      # - name: Terraform Apply
        # run: terraform apply -auto-approve -var "ami_id=${{ needs.build-ami.outputs.ami_id }}"
        # working-directory: terraform
