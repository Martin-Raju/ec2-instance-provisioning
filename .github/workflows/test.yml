name: Terraform Deploy with Optional AMI

on:
  workflow_dispatch:
    inputs:
      use_custom_ami:
        description: "Use AMI from running instance?"
        required: true
        default: "false"
        type: boolean
      running_instance_id:
        description: "ID of running instance (required if using custom AMI)"
        required: false
        default: ""

jobs:
  deploy-terraform:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.9.0"

      - name: Terraform Init
        run: terraform init
        working-directory: terraform

      - name: Terraform Apply
        run: |
          echo "use_custom_ami=${{ github.event.inputs.use_custom_ami }}"
          echo "running_instance_id=${{ github.event.inputs.running_instance_id }}"
          if [ "${{ github.event.inputs.use_custom_ami }}" = "true" ]; then
            if [ -z "${{ github.event.inputs.running_instance_id }}" ]; then
              echo "Error: running_instance_id must be provided when use_custom_ami is true."
              exit 1
            fi
            echo "Using AMI from running instance: ${{ github.event.inputs.running_instance_id }}"
          else
            echo "Using default AMI"
          fi

          terraform apply -auto-approve \
            -var="use_custom_ami=${{ github.event.inputs.use_custom_ami }}" \
            -var="running_instance_id=${{ github.event.inputs.running_instance_id }}"
        working-directory: terraform
